{"version":3,"sources":["main/images/avatar/profile.png","main/files/Sarot_Resume.pdf","logo.svg","main/home/index.js","main/header/index.js","main/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","console","log","avatar","HomeComponent","react_default","a","createElement","className","src","height","width","Component","HeaderComponent","href","ResumeFile","MainIndex","main_header","main_home","App","main","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8fbcf2ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.160cf9df.png\";","module.exports = __webpack_public_path__ + \"static/media/Sarot_Resume.03fd6520.pdf\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from 'react';\r\nimport './home.css';\r\nimport avatar from \"../images/avatar/profile.png\";\r\n\r\nconsole.log(avatar);\r\n\r\nclass HomeComponent extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"home-flex\">\r\n        <div className=\"col-4 home-item\">\r\n          <br />\r\n          <img src={avatar} height=\"80%\" width=\"101%\" />\r\n          <br/>\r\n        </div>\r\n        <div className=\"col-8 home-item\">\r\n          <p>\r\n            <br/>\r\n            Hi ! I'm <b>Sarot Busala</b>. <br/>\r\n            I'm aspiring to become a researcher in Computer Graphics. <br/>\r\n            My ultimate goal is to piece through the very limit and boundary of game industry <br/>\r\n            by developing and introducing a way humans create digital contents <br/>\r\n            My main focus is in researching better way to create 3D model with less effort. <br/>\r\n\t    The way we create 3D model now is quite linear and we could have done much better ! <br/>\r\n \t    My research focus is in applying multi-view, photometric stereo and deep learning together to achieve the aforementioned goal. <br/>\r\n\t    My interest is actually in anything that could make game development becomes less costly and more enjoyable ! <br/>\r\n\t    I focus on 3D modeling, but another aspects are all important too. Whether it is in coding, modeling, animating, etc.<br/>\r\n\t    There are countless things that could be improved. <br/>\r\n\t    Many people around the world contributing are in their own way. I hope my work could somehow help ! :) <br/>\r\n            I strongly believe digital contents in the future would be <br/>\r\n            the thing that is inherent in humans' development and also <br/>\r\n            a main part of how our society would become !<br/>\r\n            <br/>\r\n            I'm currently a 1st year master student at Chulalongkorn University. <br/>\r\n            My plan is to continue my study on PhD abroad ! (The location has not yet decided). <br/>\r\n            Thank you for visiting my personal site !<br/>\r\n            <br/>\r\n            初めまして！私は　「サロト　ブサラー」　(Sarot Busala)　と申します！<br/>\r\n            私の目標はコンピュターグラフィックスの研究者になることです！ <br/>\r\n            このサイトに来てくれてありがとうございました！ <br/>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeComponent;\r\n","import React, { Component } from 'react';\r\nimport './header.css';\r\n\r\nimport ResumeFile from \"../files/Sarot_Resume.pdf\";\r\n\r\nclass HeaderComponent extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark header-styles\">\r\n        <a className=\"navbar-brand\" href=\"/home\">Sarot Busala</a>\r\n\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/home\">Projects</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/home\">Publications</a>\r\n            </li>\r\n            \r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href={ResumeFile}>Resume</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/home\">Blogs</a>\r\n            </li>\r\n\r\n          </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderComponent;\r\n","import React, { Component } from 'react';\r\n\r\nimport HomeComponent from './home';\r\nimport HeaderComponent from './header';\r\n\r\nimport './styles.css';\r\n\r\nclass MainIndex extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"bg-img\">\r\n      <br/>\r\n        <div className=\"container\">\r\n            <HeaderComponent />\r\n            <div className=\"bg-content\">\r\n              <HomeComponent />\r\n            </div>\r\n        </div>\r\n        <br/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainIndex;\r\n","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport MainIndex from './main';\r\n\r\nclass App extends Component {\r\n  render(){\r\n    return (\r\n          <MainIndex/>\r\n    );\r\n\r\n\r\n  }\r\n  /*render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <p>\r\n            Edit <code>src/App.js</code> and save to reload.\r\n          </p>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://reactjs.org\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Learn React\r\n          </a>\r\n        </header>\r\n      </div>\r\n    );\r\n  }*/\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}